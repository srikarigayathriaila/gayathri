class Solution(object):
    def numIslands(self, grid):
        def dfs(i, j, vis, grid, n, m):
            for r, c in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                ur = i + r
                uc = j + c
                if 0 <= ur < n and 0 <= uc < m and grid[ur][uc] == "1" and vis[ur][uc] == 0:
                    vis[ur][uc] = 1
                    dfs(ur, uc, vis, grid, n, m)
        n = len(grid)
        m = len(grid[0])
        vis = [[0] * m for _ in range(n)]
        noOfIslands = 0
        for i in range(n):
            for j in range(m):
                if grid[i][j] == "1" and vis[i][j] == 0:
                    vis[i][j] = 1
                    dfs(i, j, vis, grid, n, m)
                    noOfIslands += 1
        return noOfIslands
