from collections import deque
class Solution:
    def findLexSmallestString(self, s, a, b):
        seen = set()
        queue = deque([s])
        smallest = s
        while queue:
            curr = queue.popleft()
            if curr in seen:
                continue
            seen.add(curr)
            smallest = min(smallest, curr)
            # Operation 1: add 'a' to odd indices
            chars = list(curr)
            for i in range(1, len(s), 2):
                chars[i] = str((int(chars[i]) + a) % 10)
            added = "".join(chars)
            # Operation 2: rotate right by b positions
            rotated = curr[-b:] + curr[:-b]
            # Add new states
            queue.append(added)
            queue.append(rotated)
        return smallest
